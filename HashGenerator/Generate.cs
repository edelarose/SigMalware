using System;
using System.IO;
using System.Security.Cryptography;
using System.Text;
using System.Windows.Forms;

namespace HashGenerator
{
    public class Generate
    {
        public Generate()
        {
            //current directory
            string path = @"C:\Users\Edele\Desktop\signatures";
            string extension = ".txt";
            string newFileName = Path.ChangeExtension(Path.GetRandomFileName(), extension);
            string newPath = Path.Combine(path, newFileName);
            for (int j = 0; j < 100; j++)
            {
                if (!File.Exists(newPath))
                {
                    using (FileStream fs = File.Create(newPath))
                    {
                        for (byte i = 0; i < 100; i++)
                        {
                            fs.WriteByte(i);
                            /*StringBuilder builder = new StringBuilder();
                            Random random = new Random();
                            char ch;
                            {
                                ch = Convert.ToChar(Convert.ToInt32(Math.Floor(26 * random.NextDouble() + 65)));
                                builder.Append(ch);
                            }
                            fs.Close();
                            StreamWriter sw = new StreamWriter(newPath);
                            sw.Write(ch.ToString());
                            sw.Close();*/

                        }
                    }

                }
            }
        }
        private static FileStream GetFS(string newPath)
        {
            return (new FileStream(newPath, FileMode.Open, FileAccess.Read, FileShare.ReadWrite));
        }
        static public string GetSHA1Hash(string newPath)
        {
            string strResult = "";
            string strHash = "";
            byte[] arrHashVal;
            FileStream fs = null;
            SHA1CryptoServiceProvider SHA1Hash = new SHA1CryptoServiceProvider();
            try
            {
                fs = GetFS(newPath);
                arrHashVal = SHA1Hash.ComputeHash(fs);
                fs.Close();

                strHash = BitConverter.ToString(arrHashVal);
                strHash = strHash.Replace("-", "");
                strResult = strHash;
            }
            catch (System.Exception e)
            {
                MessageBox.Show(e.Message, "An Error has occurred", MessageBoxButtons.OK,
                    MessageBoxIcon.Error, MessageBoxDefaultButton.Button1);
            }
            return (strResult);
        }
    }
}
