using System.Data;
using System.Data.SQLite;
using Common.Lib.Interfaces;
using System.Configuration;
using System;

namespace Common.Lib.Models
{
    public class Model : IModel 
    {
        public DataSet GetAllHashes()
        {
            DataSet hashes = new DataSet();
            const string query = @"Select sha1 from malware_samples";
            try
            {
                using (SQLiteConnection Connection = new SQLiteConnection(ConfigurationManager.ConnectionStrings["SigMalware"].ConnectionString))
                using (SQLiteCommand command = new SQLiteCommand(query,Connection))
                {
                   command.CommandType = CommandType.Text;
                   Connection.Open();
                   try
                   {
                       command.ExecuteNonQuery();
                   }
                   catch (Exception ex)
                   {
                       string e = ex.Message;
                       command.Dispose();
                       Connection.Close();
                   }
                   finally
                   {
                       SQLiteDataAdapter dataAdapter = new SQLiteDataAdapter(command);
                       dataAdapter.Fill(hashes);
                       Console.WriteLine(hashes);
                       command.Dispose(); 
                       Connection.Close();
                   }
                   
                   return hashes;
                }
            }
            catch(SQLiteException ex)
            {
                string e = ex.Message;
                return hashes;
            }
        }
    }
}
