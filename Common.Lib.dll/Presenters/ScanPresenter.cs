using Common.Lib.Models;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.ComponentModel;

namespace Common.Lib.dll.Presenters
{
    public class ScanPresenter
    {
        #region Attributes & Constructor
        private IScanView _View;
        public ScanPresenter(IScanView view)
        {
            _View = view;
        }
        #endregion
        #region Public Methods
        public List<string> StartScan()
        {
            _View.progressVisible = true;
            string username = Environment.UserName;
            DirectoryInfo scanDir = new DirectoryInfo(Environment.GetFolderPath(Environment.SpecialFolder.Desktop) + @"\signatures\");
            int noOfFiles = scanDir.EnumerateFiles().Count();
            _View.numberOfItems = noOfFiles.ToString();
            _View.progressAmt = 0;
            _View.progressMax = noOfFiles;
            List<string> files = new List<string>();
            for (int i = 0; i < noOfFiles; i++)
            {
                FileInfo f = scanDir.GetFiles().ElementAt(i);
                files.Add(f.FullName);
                _View.progressAmt++;
            }
            return files;
        }
        public List<string> getFileNamesFromDir(List<string>fullDir)
        {
            List<string> shortFiles = new List<string>();
            foreach (string file in fullDir)
            {
                shortFiles.Add(file.Substring(file.LastIndexOf('\\') + 1));
            }

            _View.listItems = shortFiles.ToArray();

            return shortFiles;
        }
        public Dictionary<string, string> fullNameOfFile(List<string>fullFileNames, List<string>fileNames)
        {
            Dictionary<string, string> fileDefinitions = new Dictionary<string,string>();
            for (int i = 0; i < fullFileNames.Count; i++)
            {
                fileDefinitions.Add(fullFileNames[i], fileNames[i]);
            }
            return fileDefinitions;
        }
        public string[] FixFiles(List<string> filenames)
        {
            try 
            {
                foreach (string file in filenames)
                {
                    File.Delete(file);
                }
            }
            catch (FileNotFoundException fiNotFound)
            {
                Console.WriteLine(fiNotFound);
                return null;
            }

            return StartScan().ToArray();
        }
        #endregion
    }
    
    public interface IScanView
    {
        #region Accessors
        bool progressVisible { get; set; }
        int progressAmt { get; set; }
        int progressMax { get; set; }
        string[] listItems { set; }
        string numberOfItems { set; }
        #endregion
    }
}
