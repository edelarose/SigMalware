using System;
using System.Collections.Generic;
using System.ComponentModel;
using System.Data;
using System.Data.SQLite;
using System.Diagnostics;
using Common.Lib.dll.Presenters;
using System.Drawing;
using System.Linq;
using System.Text;
using System.Windows.Forms;
using System.IO;
using System.Security.Cryptography;

namespace SigMalware
{
    public partial class FrmDB : Form
    {
        TutorialPresenter _presenter = new TutorialPresenter();
        string filePath;
        
        public FrmDB()
        {
            InitializeComponent();
            _presenter.GetAllHashes();
        }
        public void btnOpen_Click(object sender, EventArgs e)
        {
            OpenFileDialog dialog = new OpenFileDialog();
            dialog.Filter = "txt files(*.txt) | *.txt";
            dialog.InitialDirectory = Environment.GetFolderPath(Environment.SpecialFolder.Desktop);
            dialog.Title = "Select a file to compare";
            dialog.Multiselect = false;
            dialog.CheckFileExists = true;
            dialog.CheckPathExists = true;
            dialog.DefaultExt = "txt";
            if (dialog.ShowDialog() != DialogResult.Cancel)
            {
                filePath = Path.GetFullPath(dialog.FileName);
                txtFile.Text = filePath;
                btnCompare.Visible = true;
            }
            else
            {
                txtFile.Text = "";
            }
            
        }
        public void btnCompare_Click(object sender, EventArgs e)
        {
            readFile();
        }
        public void readFile()
        {
            if (txtFile.Text != null)
            {
                //get file contents
                FileStream fs = File.OpenRead(filePath);
                //hash contents for comparison
                SHA1CryptoServiceProvider sha = new SHA1CryptoServiceProvider();
                byte[] buffer = Encoding.UTF8.GetBytes(filePath); 
                byte[] checksum = sha.ComputeHash(buffer);
                fs.Close();
                string strChecksum = BitConverter.ToString(checksum).Replace("-", string.Empty);
                string txtFileContents = strChecksum;
                CompareToDB(txtFileContents);
            }
            else
            {
                MessageBox.Show("Please Select a File", "No file", MessageBoxButtons.OK, MessageBoxIcon.Warning);
            }
        }
        public void CompareToDB(string txtFileContents)
        {
            DataSet hashes = _presenter.GetAllHashes();
            foreach (DataTable table in hashes.Tables)
            {
                bool rC = _presenter.CompareSig(txtFileContents);
                if (rC != false)
                {
                    MessageBox.Show("File detected as Malware!", "Malware", MessageBoxButtons.OK, MessageBoxIcon.Warning);
                }
                else
                {
                    MessageBox.Show("No malware found", "OK", MessageBoxButtons.OK, MessageBoxIcon.Information);
                }
            }
        }
        public void btnExit_Click(object sender, EventArgs e)
        {
            var res = MessageBox.Show("Are you sure you want to exit?", "Confirm exit", MessageBoxButtons.YesNo, MessageBoxIcon.Question);
            if (res == DialogResult.Yes)
            {
                Application.Exit();
            }
            else
            {
                return;
            }
        }
        public void btnMenu_Click(object sender, EventArgs e)
        {
            FrmScan formScan = new FrmScan();
            this.Visible = false;
            formScan.ShowDialog();
            this.Close();
        }
        public void btnConfig_Click(object sender, EventArgs e)
        {
            FrmConfig formConf = new FrmConfig();
            this.Visible = false;
            formConf.ShowDialog();
            this.Close();
        }
    }   
}
